name: Build and Deploy

on:
  push:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean package

    - name: Install sshpass
      run: sudo apt-get update && sudo apt-get install -y sshpass

    - name: Configure AWS CLI in runner
      run: |
        aws configure set aws_access_key_id "${AWS_ACCESS_KEY_ID}"
        aws configure set aws_secret_access_key "${AWS_SECRET_ACCESS_KEY}"
        aws configure set region ap-south-1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Copy WAR to EC2
      run: |
        sshpass -p "${{ secrets.TEST_EC2_PASSWORD }}" \
        scp -o StrictHostKeyChecking=no webapp/target/*.war \
        ${{ secrets.TEST_EC2_USER }}@${{ secrets.TEST_EC2_HOST }}:/home/test/

    - name: Build and Push Docker Image on EC2
      run: |
        ECR_PASSWORD=$(aws ecr get-login-password --region ap-south-1)
        sshpass -p "${{ secrets.TEST_EC2_PASSWORD }}" \
        ssh -o StrictHostKeyChecking=no ${{ secrets.TEST_EC2_USER }}@${{ secrets.TEST_EC2_HOST }} << EOF
          cd /home/test

          docker stop webapp-container || true
          docker rm webapp-container || true

          docker build -t webapp-image .

          docker tag webapp-image:latest 792766147068.dkr.ecr.ap-south-1.amazonaws.com/myrepo:webapp-image

          echo "$ECR_PASSWORD" | docker login --username AWS --password-stdin 792766147068.dkr.ecr.ap-south-1.amazonaws.com

          docker push 792766147068.dkr.ecr.ap-south-1.amazonaws.com/myrepo:webapp-image
        EOF

    - name: Deploy to Docker Host via Ansible
      run: |
        sshpass -p "${{ secrets.TEST_EC2_PASSWORD }}" \
        ssh -o StrictHostKeyChecking=no ${{ secrets.TEST_EC2_USER }}@${{ secrets.TEST_EC2_HOST }} << 'EOF'
          ansible-playbook -i /home/test/myhosts /home/test/deploy-app.yml
        EOF
